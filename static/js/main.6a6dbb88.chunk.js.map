{"version":3,"sources":["components/templates/MainTmpl/classes.module.css","components/organisms/MenuDrawer/DrawerListItem/classes.module.css","components/organisms/MenuDrawer/classes.module.css","components/pages/Todos/TodoItem/classes.module.css","components/pages/Showcase/classes.module.css","components/atoms/Canvas/index.tsx","components/organisms/MenuDrawer/DrawerListItem/index.tsx","components/organisms/MenuDrawer/index.tsx","static/sketches/b.ts","components/organisms/AppBar/index.tsx","components/organisms/Footer/index.tsx","components/templates/MainTmpl/index.tsx","static/sketches/a.ts","state/Store/ducks/PageStatus/types.ts","state/Store/ducks/PageStatus/actions.ts","components/pages/Home/index.tsx","components/pages/About/index.tsx","state/Store/ducks/Todos/types.ts","components/pages/Todos/TodoItem/index.tsx","components/pages/Todos/index.tsx","state/Store/ducks/Todos/actions.ts","lib/helpers/index.ts","utils/api/index.ts","utils/api/hooks/useListUsersApi/index.ts","components/pages/Forms/index.tsx","components/pages/Showcase/index.tsx","App/index.tsx","state/Store/ducks/Todos/reducers.ts","state/Store/ducks/Todos/index.ts","state/Store/ducks/PageStatus/reducers.ts","state/Store/ducks/PageStatus/index.ts","state/Store/index.ts","reportWebVitals.ts","MuiThemeOptions.ts","index.tsx","state/Store/ducks/index.ts","components/organisms/Footer/classes.module.css"],"names":["module","exports","Canvas","props","wrapper","createRef","useEffect","current","p5instance","p5","sketch","remove","ref","DrawerListItem","list","history","useHistory","location","useLocation","handleRoute","useCallback","push","to","selected","pathname","ListItem","button","onClick","ListItemIcon","classes","root","icon","ListItemText","title","listMaps","Info","MenuDrawer","open","Drawer","paper","DrawerPaper","anchor","onClose","List","map","setup","createCanvas","frameRate","background","x","draw","noStroke","fill","rect","width","height","Math","sin","frameCount","TWO_PI","noFill","stroke","strokeWeight","line","CustomAppBar","useState","openDrawer","setOpenDrawer","handleDrawerToggle","status","useSelector","state","pageStatus","AppBar","Toolbar","IconButton","Menu","CircularProgress","Footer","BottomNavigation","showLabels","onChange","_event","value","console","log","handleChange","BottomNavigationAction","label","MainTmpl","children","Container","ellipse","random","pop","mouseClicked","SET_PAGE_STATUS","pageStatusActionTypes","setPageStatus","type","payload","Home","dispatch","useDispatch","Box","Typography","variant","About","queryClient","useQueryClient","slice","setSlice","handleTextLengthChange","_e","Number","handleUsersInvalidate","invalidateQueries","Button","Slider","marks","min","max","valueLabelDisplay","paragraph","ADD_TODO","TOGGLE_TODO","todosActionTypes","TodoItem","id","toggle","TableRow","TableBodyRow","TableCell","OutlinedInput","fullWidth","multiline","Done","Todos","page","setPage","limit","setLimit","todos","handlePageChange","handleRowsPerPageChange","event","undefined","parseInt","target","handleTodoCreate","v4","addTodo","handleTodoCompleted","completed","toggleTodo","TableContainer","component","Paper","Table","TableHead","TableBody","filter","t","TablePagination","onPageChange","onRowsPerPageChange","count","length","rowsPerPage","rowsPerPageOptions","startIcon","sleep","ms","Promise","resolve","setTimeout","api","axios","create","baseURL","process","interceptors","request","use","response","error","reject","Forms","opt","required","Array","isArray","cacheTime","useQuery","a","get","data","users","isLoading","isError","isSuccess","onSubmit","values","JSON","stringify","subscription","submitting","errors","touched","handleSubmit","name","validate","input","meta","TextField","InputLabelProps","shrink","FormHelperTextProps","helperText","FormControl","FormLabel","RadioGroup","row","user","FormControlLabel","String","control","Radio","email","FormHelperText","FormGroup","Checkbox","size","color","disabled","Showcase","showSnackbar","setShowSnackbar","openDialog","setOpenDialog","hasError","setHasError","handleSnackbarShow","handleSnackbarHide","reason","handleDialogOpen","handleDialogClose","handleErrorSwitch","e","currentTarget","checked","Switch","LayoutPaper","className","Items","Input","InputLabel","Select","displayEmpty","MenuItem","href","style","LinearProgress","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","message","action","Close","Dialog","disableEscapeKeyDown","DialogTitle","DialogContent","DialogActions","App","basename","strict","exact","path","isActionType","some","actionType","createTodosReducer","initialState","description","index","findIndex","todo","createPageStatusReducer","createBrowserHistory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","muiThemeOptions","components","MuiButton","styleOverrides","sizeSmall","fontSize","fontWeight","sizeLarge","defaultProps","disableRipple","MuiButtonBase","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","palette","primary","main","secondary","warning","info","success","text","typography","fontFamily","join","theme","createTheme","store","createStore","combineReducers","router","connectRouter","createReducer","compose","applyMiddleware","configureStore","QueryClient","defaultOptions","queries","retry","refetchOnWindowFocus","staleTime","ReactDOM","render","StrictMode","CssBaseline","client","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6a6dbb88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"classes_Container__2ue38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItemIcon\":\"classes_ListItemIcon__1Egz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerPaper\":\"classes_DrawerPaper__3lW-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableBodyRow\":\"classes_TableBodyRow__-A2iP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutPaper\":\"classes_LayoutPaper__1y55P\",\"Items\":\"classes_Items__4V4AO\",\"Dialog\":\"classes_Dialog__3NlNI\"};","import { useEffect, createRef } from \"react\";\nimport p5 from \"p5\";\n\ninterface CanvasProps {\n  [key: string]: unknown;\n  sketch: (p5: p5) => void;\n}\n\nconst Canvas = (props: CanvasProps) => {\n  const wrapper = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (wrapper.current === null) return;\n    const p5instance = new p5(props.sketch, wrapper.current);\n\n    // remove instance on unmount\n    return () => p5instance.remove();\n  }, [wrapper, props.sketch]);\n\n  return <div ref={wrapper} />;\n};\nexport default Canvas;\n","import { useCallback } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\n\nimport classes from \"./classes.module.css\";\nimport { ListMap } from \"../types\";\n\ninterface DrawerListItemProps {\n  list: ListMap;\n}\n\nconst DrawerListItem: React.FunctionComponent<DrawerListItemProps> = ({\n  list,\n}) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleRoute = useCallback(() => {\n    history.push(list.to);\n  }, [history, list]);\n\n  const selected = location.pathname === list.to;\n\n  return (\n    <ListItem\n      button={true}\n      key={list.to}\n      onClick={handleRoute}\n      selected={selected}\n    >\n      <ListItemIcon classes={{ root: classes.ListItemIcon }}>\n        {list.icon}\n      </ListItemIcon>\n      <ListItemText>{list.title}</ListItemText>\n    </ListItem>\n  );\n};\n\nexport default DrawerListItem;\n","import { Drawer, List } from \"@mui/material\";\nimport {\n  Home as HomeIcon,\n  Info as InfoIcon,\n  FormatListBulleted as TodosIcon,\n  ShoppingCart as ShowcaseIcon,\n} from \"@mui/icons-material\";\n\nimport DrawerListItem from \"./DrawerListItem\";\nimport { IProps, ListMap } from \"./types\";\nimport classes from \"./classes.module.css\";\n\nconst listMaps: ListMap[] = [\n  {\n    title: \"Home\",\n    icon: <HomeIcon />,\n    to: \"/\",\n  },\n  {\n    title: \"Todos\",\n    icon: <TodosIcon />,\n    to: \"/todos\",\n  },\n  {\n    title: \"About\",\n    icon: <InfoIcon />,\n    to: \"/about\",\n  },\n  {\n    title: \"Forms\",\n    icon: <InfoIcon />,\n    to: \"/forms\",\n  },\n  {\n    title: \"Showcase\",\n    icon: <ShowcaseIcon />,\n    to: \"/showcase\",\n  },\n];\n\nconst MenuDrawer: React.FunctionComponent<IProps> = ({ open, onClick }) => {\n  return (\n    <Drawer\n      classes={{ paper: classes.DrawerPaper }}\n      anchor=\"left\"\n      open={open}\n      onClose={onClick}\n    >\n      <List onClick={onClick}>\n        {listMaps.map((list) => (\n          <DrawerListItem list={list} key={list.to} />\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default MenuDrawer;\n","import p5 from \"p5\";\n\nconst sketch = (p5: p5) => {\n  p5.setup = () => {\n    p5.createCanvas(240, 32);\n    p5.frameRate(60);\n    p5.background(255);\n  };\n\n  let x = 0;\n\n  p5.draw = () => {\n    p5.noStroke();\n    p5.fill(255, 0.9);\n    p5.rect(0, 0, p5.width, p5.height);\n\n    x = p5.width * Math.sin((p5.frameCount / 180) % p5.TWO_PI);\n    p5.noFill();\n    p5.stroke(0);\n    p5.strokeWeight(2);\n    p5.line(x, 0, x, p5.height);\n  };\n};\n\nexport default sketch;\n","import { useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  CircularProgress,\n} from \"@mui/material\";\nimport { Menu as MenuIcon } from \"@mui/icons-material\";\n\nimport { GlobalState } from \"state/Store/ducks\";\nimport { PageStatusState } from \"state/Store/ducks/PageStatus\";\nimport Canvas from \"components/atoms/Canvas\";\nimport MenuDrawer from \"components/organisms/MenuDrawer\";\nimport sketch from \"static/sketches/b\";\n\nconst CustomAppBar: React.FunctionComponent = () => {\n  const [openDrawer, setOpenDrawer] = useState<boolean>(false);\n\n  const handleDrawerToggle = useCallback(() => {\n    setOpenDrawer((openDrawer) => !openDrawer);\n  }, []);\n\n  const { status } = useSelector<GlobalState, PageStatusState>(\n    (state) => state.pageStatus,\n  );\n  return (\n    <AppBar>\n      <Toolbar>\n        <IconButton onClick={handleDrawerToggle}>\n          <MenuIcon />\n        </IconButton>\n        {status === \"success\" ? (\n          <Canvas sketch={sketch} />\n        ) : (\n          <CircularProgress />\n        )}\n        <MenuDrawer open={openDrawer} onClick={handleDrawerToggle} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","import { BottomNavigation, BottomNavigationAction } from \"@mui/material\";\n\nimport classes from \"./classes.module.css\";\n\nconst Footer: React.FunctionComponent = () => {\n  const handleChange = (value: string) => {\n    console.log(value);\n  };\n\n  return (\n    <BottomNavigation\n      classes={{\n        root: classes.BottomNavigation,\n      }}\n      // component=\"footer\"\n      showLabels={true}\n      onChange={(_event, value) => handleChange(value)}\n    >\n      <BottomNavigationAction\n        classes={{\n          root: classes.BottomNavigationAction,\n        }}\n        label=\"A\"\n        value=\"A\"\n      />\n\n      <BottomNavigationAction\n        classes={{\n          root: classes.BottomNavigationAction,\n        }}\n        label=\"B\"\n        value=\"B\"\n      />\n    </BottomNavigation>\n  );\n};\nexport default Footer;\n","import { Container } from \"@mui/material\";\n\nimport classes from \"./classes.module.css\";\nimport { IProps } from \"./types\";\nimport AppBar from \"components/organisms/AppBar\";\nimport Footer from \"components/organisms/Footer\";\n\nconst MainTmpl: React.FunctionComponent<IProps> = ({ children }) => {\n  return (\n    <Container classes={{ root: classes.Container }}>\n      <AppBar />\n      {children}\n      <Footer />\n    </Container>\n  );\n};\n\nexport default MainTmpl;\n","import p5 from \"p5\";\n\nconst sketch = (p5: p5) => {\n  p5.setup = () => {\n    p5.createCanvas(640, 480);\n    p5.frameRate(12);\n  };\n\n  p5.draw = () => {\n    p5.stroke(255);\n    p5.strokeWeight(1);\n    p5.fill(((p5.frameCount % 360) / 360) * 255);\n    p5.push();\n    p5.ellipse(p5.width * Math.random(), p5.height * Math.random(), 12, 12);\n    p5.pop();\n  };\n\n  p5.mouseClicked = () => {\n    p5.fill(255);\n    p5.rect(0, 0, p5.width, p5.height);\n  };\n};\n\nexport default sketch;\n","import { Action } from \"redux\";\n\nexport const SET_PAGE_STATUS = \"pageStatus/SET_PAGE_STATUS\";\n\nexport type PageStatus = \"idle\" | \"loading\" | \"success\" | \"error\";\n\nexport interface SetPageStatusAction extends Action {\n  type: typeof SET_PAGE_STATUS;\n  payload: {\n    status: PageStatus;\n  };\n}\n\nexport const pageStatusActionTypes = [SET_PAGE_STATUS];\nexport type PageStatusAction = SetPageStatusAction;\n","import { SetPageStatusAction, SET_PAGE_STATUS, PageStatus } from \"./types\";\n\nexport const setPageStatus = (status: PageStatus): SetPageStatusAction => ({\n  type: SET_PAGE_STATUS,\n  payload: { status },\n});\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Box, Typography } from \"@mui/material\";\n\nimport MainTmpl from \"components/templates/MainTmpl\";\nimport Canvas from \"components/atoms/Canvas\";\nimport sketch from \"static/sketches/a\";\nimport { GlobalState } from \"state/Store/ducks\";\nimport { PageStatusState } from \"state/Store/ducks/PageStatus\";\nimport { setPageStatus } from \"state/Store/ducks/PageStatus/actions\";\n\nconst Home: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { status } = useSelector<GlobalState, PageStatusState>(\n    (state) => state.pageStatus,\n  );\n\n  useEffect(() => {\n    dispatch(setPageStatus(\"success\"));\n\n    // status: idle on unmount\n    return () => {\n      dispatch(setPageStatus(\"idle\"));\n    };\n  }, [dispatch]);\n\n  return (\n    <MainTmpl>\n      <Box>\n        <Typography variant=\"h6\">{`Home ${status}`}</Typography>\n\n        {status === \"success\" && <Canvas sketch={sketch} />}\n      </Box>\n    </MainTmpl>\n  );\n};\n\nexport default Home;\n","import { useCallback, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\n\nimport { Box, Typography, Slider, Button } from \"@mui/material\";\n\nimport MainTmpl from \"components/templates/MainTmpl\";\n\nconst About: React.FunctionComponent = () => {\n  const queryClient = useQueryClient();\n  const [slice, setSlice] = useState(500);\n  const handleTextLengthChange = useCallback((_e, value) => {\n    setSlice(Number(value));\n  }, []);\n\n  const marks = [\n    {\n      value: 0,\n      label: \"🦜\",\n    },\n    {\n      value: 120,\n      label: \"🐈\",\n    },\n    {\n      value: 300,\n      label: \"🎂\",\n    },\n    {\n      value: 1200,\n      label: \"🤡\",\n    },\n  ];\n\n  const handleUsersInvalidate = useCallback(() => {\n    console.log(\"invalidate all cached data\");\n    queryClient.invalidateQueries();\n  }, [queryClient]);\n\n  return (\n    <MainTmpl>\n      <Box>\n        <Button onClick={handleUsersInvalidate}>invalidate</Button>\n        <Slider\n          marks={marks}\n          min={0}\n          max={1200}\n          value={slice}\n          valueLabelDisplay=\"on\"\n          onChange={handleTextLengthChange}\n        />\n        <Typography variant=\"h6\">About</Typography>\n\n        <Typography paragraph={true}>\n          {`🦜 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla dictum\n          blandit mi sed placerat. Aenean 🐈 interdum sed quam eu vehicula. Vivamus\n          dictum non est in rutrum. Aliquam non urna purus. Sed euismod, lacus\n          sed aliquam sodales, dolor ex dapibus nunc, in sodales tortor libero et nibh.\n         🎂 Quisque sollicitudin ultricies tellus, eget ultricies risus\n          mattis eu. Cras sed nunc feugiat, pulvinar mauris et, cursus libero.\n          Sed augue ligula, congue ac facilisis vitae, iaculis in elit. Sed\n          bibendum sed ligula sit amet gravida. Nullam hendrerit nisl sit amet\n          rhoncus volutpat. Nam rhoncus et leo non tincidunt. Sed viverra\n          gravida lorem id dapibus. Praesent diam odio, dictum non sem eget,\n          varius scelerisque eros. Proin vehicula pellentesque hendrerit. Nunc\n          id placerat ligula. Nunc finibus, magna non accumsan tincidunt, libero\n          sapien ultrices ex, non hendrerit leo tortor id libero. Fusce vehicula\n          laoreet tristique. Interdum et malesuada fames ac ante ipsum primis in\n          faucibus. 🤡 ...`.slice(0, slice)}\n        </Typography>\n        <Typography paragraph={true}>\n          Fusce non hendrerit risus, at ornare nisl. Fusce velit orci, efficitur\n          et rutrum id, lacinia eget velit. Etiam facilisis urna eu ex\n          convallis, eu ornare lacus convallis. Maecenas scelerisque, leo vitae\n          accumsan sagittis, arcu nisl pellentesque leo, sed imperdiet diam nisi\n          in lorem. Morbi mollis lacus quis convallis congue. Vivamus eget nisi\n          vulputate, viverra mi non, fringilla sapien. Praesent tincidunt erat\n          ut tristique pharetra. Nunc pellentesque magna augue, a maximus metus\n          hendrerit sit amet. Nullam sollicitudin, massa a efficitur porttitor,\n          magna enim tincidunt lacus, ac iaculis dolor risus et nibh. Phasellus\n          eget elementum tortor, eget fermentum neque. Sed fringilla, dui id\n          porttitor dignissim, augue ante facilisis mi, ac dapibus risus risus\n          porta nunc. Duis venenatis pharetra velit nec scelerisque. Nam porta\n          neque ac elit sollicitudin, eu commodo urna laoreet. Mauris\n          scelerisque, mauris id fermentum maximus, velit justo tempor ex, a\n          suscipit risus sapien eget velit. Praesent vel nibh malesuada,\n          tristique nisi sed, tempus lorem.\n        </Typography>\n        <Typography paragraph={true}>\n          Interdum et malesuada fames ac ante ipsum primis in faucibus. Mauris\n          nec ex diam. Ut lectus sapien, tempus sed lacus quis, molestie aliquet\n          orci. In mattis eleifend diam, at placerat urna posuere at. Phasellus\n          a sem venenatis, scelerisque purus nec, iaculis nulla. Praesent\n          iaculis nec orci id fermentum. Nullam ut risus lorem. Aliquam at dolor\n          sagittis, vulputate justo non, viverra risus. Morbi vel arcu cursus,\n          viverra mi eu, tempor est. Nam metus felis, fringilla ac gravida et,\n          ultrices non metus. Pellentesque ut leo non ante feugiat aliquet a sed\n          velit. Suspendisse eu gravida ante. In orci eros, sodales eu nibh sed,\n          fringilla dapibus justo. Pellentesque ut tellus erat. Quisque vitae\n          neque nec nunc iaculis sollicitudin pretium vitae dolor. In hac\n          habitasse platea dictumst. Quisque gravida congue erat, id pretium\n          purus sodales quis. In aliquam ornare nunc ac sollicitudin. Aliquam\n          dignissim fermentum justo. Etiam facilisis, urna sed pulvinar\n          condimentum, eros turpis vestibulum eros, ut pulvinar mi mauris et\n          risus. Donec congue ipsum sed risus tempus, vitae sollicitudin diam\n          auctor. Nam pharetra justo facilisis ullamcorper convallis. Sed ligula\n          justo, viverra quis libero eu, pulvinar consequat odio.\n        </Typography>\n      </Box>\n    </MainTmpl>\n  );\n};\n\nexport default About;\n","import { Action } from \"redux\";\n\nexport const ADD_TODO = \"Todos/ADD_TODO\";\nexport const TOGGLE_TODO = \"Todos/TOGGLE_TODO\";\n\nexport interface AddTodoAction extends Action {\n  type: typeof ADD_TODO;\n  payload: {\n    id: string;\n  };\n}\n\nexport interface ToggleTodoAction extends Action {\n  type: typeof TOGGLE_TODO;\n  payload: {\n    id: string;\n    completed: boolean;\n  };\n}\n\nexport const todosActionTypes = [ADD_TODO, TOGGLE_TODO];\nexport type TodosAction = AddTodoAction | ToggleTodoAction;\n","import {\n  TableRow,\n  TableCell,\n  OutlinedInput,\n  IconButton,\n} from \"@mui/material\";\nimport { Done as DoneIcon } from \"@mui/icons-material\";\n\nimport { IProps } from \"./types\";\nimport classes from \"./classes.module.css\";\n\nconst TodoItem: React.FunctionComponent<IProps> = ({ id, toggle }) => {\n  const handleClick = () => toggle(id);\n\n  return (\n    <TableRow classes={{ root: classes.TableBodyRow }}>\n      <TableCell>{id}</TableCell>\n      <TableCell>\n        <OutlinedInput fullWidth={true} />\n      </TableCell>\n      <TableCell>\n        <OutlinedInput multiline={true} fullWidth={true} />\n      </TableCell>\n      <TableCell>\n        <IconButton onClick={handleClick}>\n          <DoneIcon />\n        </IconButton>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default TodoItem;\n","import { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\n\nimport {\n  Box,\n  Typography,\n  Button,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableHead,\n  Paper,\n  TablePagination,\n} from \"@mui/material\";\nimport { AddCircle as AddIcon } from \"@mui/icons-material\";\n\nimport MainTmpl from \"components/templates/MainTmpl\";\nimport { GlobalState } from \"state/Store/ducks\";\nimport { TodosState } from \"state/Store/ducks/Todos\";\nimport { addTodo, toggleTodo } from \"state/Store/ducks/Todos/actions\";\nimport TodoItem from \"./TodoItem\";\n\nconst Todos: React.FunctionComponent = () => {\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const rowsPerPageOptions = [5, 10, 20];\n  const dispatch = useDispatch();\n  const { todos } = useSelector<GlobalState, TodosState>(\n    (state) => state.todos,\n  );\n\n  const handlePageChange = useCallback(\n    (\n      _e: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\n      page: number,\n    ) => {\n      setPage(page);\n    },\n    [],\n  );\n  const handleRowsPerPageChange = useCallback(\n    (\n      event:\n        | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n        | undefined,\n    ) => {\n      if (event === undefined) return;\n\n      setLimit(parseInt(event.target.value, 10));\n      setPage(0);\n    },\n    [],\n  );\n\n  const handleTodoCreate = useCallback(() => {\n    const id = v4();\n    dispatch(addTodo(id));\n  }, [dispatch]);\n\n  const handleTodoCompleted = useCallback(\n    (id: string) => dispatch(toggleTodo(id, true)),\n    [dispatch],\n  );\n\n  return (\n    <MainTmpl>\n      <Box>\n        <Typography variant=\"h6\">Todos page {page + 1}</Typography>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell variant=\"head\">id</TableCell>\n                <TableCell variant=\"head\">title</TableCell>\n                <TableCell variant=\"head\">description</TableCell>\n                <TableCell variant=\"head\">done</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {todos\n                .filter((t) => !t.completed)\n                .slice(page * limit, (page + 1) * limit)\n                .map((t) => (\n                  <TodoItem id={t.id} toggle={handleTodoCompleted} key={t.id} />\n                ))}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            page={page}\n            onPageChange={handlePageChange}\n            onRowsPerPageChange={handleRowsPerPageChange}\n            count={todos.filter((t) => !t.completed).length}\n            rowsPerPage={limit}\n            rowsPerPageOptions={rowsPerPageOptions}\n          />\n        </TableContainer>\n        <Button\n          startIcon={<AddIcon />}\n          onClick={handleTodoCreate}\n          variant=\"contained\"\n        >\n          add\n        </Button>\n      </Box>\n    </MainTmpl>\n  );\n};\n\nexport default Todos;\n","import {\n  AddTodoAction,\n  ToggleTodoAction,\n  ADD_TODO,\n  TOGGLE_TODO,\n} from \"./types\";\n\nexport const addTodo = (id: string): AddTodoAction => ({\n  type: ADD_TODO,\n  payload: { id },\n});\n\nexport const toggleTodo = (\n  id: string,\n  completed: boolean,\n): ToggleTodoAction => ({\n  type: TOGGLE_TODO,\n  payload: { id, completed },\n});\n","export const sleep = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\napi.interceptors.request.use((request) => {\n  console.log(\"#############\\nRequest: \", request);\n  return request;\n});\n\napi.interceptors.response.use(\n  (response) => {\n    console.log(\"#############\\nResponse: \", response);\n    return Promise.resolve(response);\n  },\n  (error) => Promise.reject({ error: error.response }),\n);\n","import { useQuery, UseQueryOptions } from \"react-query\";\n\nimport { api } from \"utils/api\";\n\nexport const useListUsersApi = (\n  opt?: UseQueryOptions<unknown, unknown, unknown, \"/users\">,\n) => {\n  console.log(opt);\n  return useQuery(\n    \"/users\",\n    async () => {\n      try {\n        const { data } = await api.get(\"/users\");\n        return data;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    opt,\n  );\n};\n","import { Form, Field } from \"react-final-form\";\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n  FormHelperText,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\n\nimport MainTmpl from \"components/templates/MainTmpl\";\nimport { sleep } from \"lib/helpers\";\nimport { useListUsersApi } from \"utils/api/hooks/useListUsersApi\";\nimport { User } from \"types\";\n\ninterface FormValue {\n  name: string;\n  user: number;\n  users: number[];\n}\n\nconst Forms: React.FunctionComponent = () => {\n  const required = (value: FormValue) => {\n    if (Array.isArray(value)) {\n      return value.length === 0 ? \"required\" : undefined;\n    }\n    return value === undefined ? \"required\" : undefined;\n  };\n\n  const {\n    data: users,\n    isLoading,\n    isError,\n    isSuccess,\n  } = useListUsersApi({ cacheTime: 5000 });\n\n  if (isLoading) {\n    return <MainTmpl>loading...</MainTmpl>;\n  }\n  if (isError) {\n    return <MainTmpl>error...</MainTmpl>;\n  }\n\n  return (\n    <MainTmpl>\n      <Box>\n        <Typography variant=\"h6\">Forms</Typography>\n\n        <Form\n          onSubmit={async (values) => {\n            await sleep(1000);\n            console.log(JSON.stringify({ values }, null, \"  \"));\n          }}\n          subscription={{\n            submitting: true,\n            values: true,\n            errors: true,\n            touched: true,\n          }}\n        >\n          {({ handleSubmit, submitting, values, errors, touched }) => (\n            <>\n              <pre>{JSON.stringify({ values }, null, \"  \")}</pre>\n              <Box>\n                <Field\n                  name=\"name\"\n                  validate={required}\n                  subscription={{ value: true, error: true, touched: true }}\n                >\n                  {({ input, meta }) => (\n                    <TextField\n                      {...input}\n                      error={!!meta.error && meta.touched}\n                      variant=\"outlined\"\n                      label=\"name\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      FormHelperTextProps={{\n                        variant: \"outlined\",\n                        error: !!meta.error,\n                      }}\n                      helperText={meta.error && meta.touched ? meta.error : \"\"}\n                    />\n                  )}\n                </Field>\n              </Box>\n              <Box>\n                <Field\n                  name=\"user\"\n                  validate={required}\n                  type=\"radio\"\n                  subscription={{ value: true, error: true, touched: true }}\n                >\n                  {({ input, meta }) => (\n                    <FormControl error={!!meta.error && meta.touched}>\n                      <FormLabel>Select favorite user</FormLabel>\n                      <RadioGroup\n                        value={input.value}\n                        row={false}\n                        onChange={input.onChange}\n                      >\n                        {isSuccess &&\n                          (users as User[]).map((user) => (\n                            <FormControlLabel\n                              key={user.id}\n                              value={String(user.id)}\n                              control={<Radio />}\n                              label={`${user.name} (${user.email})`}\n                            />\n                          ))}\n                      </RadioGroup>\n                      {!!meta.error && meta.touched && (\n                        <FormHelperText>{meta.error}</FormHelperText>\n                      )}\n                    </FormControl>\n                  )}\n                </Field>\n              </Box>\n              <Box>\n                <FormControl error={!!errors?.users && touched?.users}>\n                  <FormLabel>Select favorite users</FormLabel>\n                  <FormGroup row={true}>\n                    {isSuccess &&\n                      (users as User[]).map((user) => (\n                        <FormControlLabel\n                          key={user.id}\n                          name=\"users\"\n                          value={String(user.id)}\n                          control={\n                            <Field\n                              name=\"users\"\n                              validate={required}\n                              type=\"checkbox\"\n                              subscription={{\n                                value: true,\n                                error: true,\n                                touched: true,\n                              }}\n                            >\n                              {({ input }) => (\n                                <Checkbox onChange={input.onChange} />\n                              )}\n                            </Field>\n                          }\n                          label={`${user.name} (${user.email})`}\n                        />\n                      ))}\n                  </FormGroup>\n                  {!!errors?.users && touched?.users && (\n                    <FormHelperText>{errors?.users}</FormHelperText>\n                  )}\n                </FormControl>\n              </Box>\n              <Box>\n                <Button\n                  size=\"large\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  onClick={handleSubmit}\n                  disabled={submitting}\n                >\n                  submit\n                </Button>\n              </Box>\n            </>\n          )}\n        </Form>\n      </Box>\n    </MainTmpl>\n  );\n};\n\nexport default Forms;\n","import { useState, useCallback } from \"react\";\n\nimport {\n  Container,\n  Box,\n  Typography,\n  Button,\n  Paper,\n  Input,\n  OutlinedInput,\n  TextField,\n  CircularProgress,\n  LinearProgress,\n  Snackbar,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  FormControl,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n  Switch,\n} from \"@mui/material\";\nimport { Info as InfoIcon, Close as CloseIcon } from \"@mui/icons-material\";\n\nimport classes from \"./classes.module.css\";\nimport MainTmpl from \"components/templates/MainTmpl\";\n\nconst Showcase: React.FunctionComponent = () => {\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleSnackbarShow = useCallback(() => {\n    setShowSnackbar(true);\n  }, []);\n\n  const handleSnackbarHide = useCallback((_e, reason?) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setShowSnackbar(false);\n  }, []);\n\n  const handleDialogOpen = useCallback(() => {\n    setOpenDialog(true);\n  }, []);\n\n  const handleDialogClose = useCallback((_e, reason?) => {\n    if (reason === \"backdropClick\") {\n      return;\n    }\n    setOpenDialog(false);\n  }, []);\n\n  const handleErrorSwitch = useCallback((e) => {\n    setHasError(e.currentTarget.checked);\n  }, []);\n\n  return (\n    <MainTmpl>\n      <Container>\n        <Box>\n          <FormControlLabel\n            label=\"error\"\n            control={<Switch checked={hasError} onChange={handleErrorSwitch} />}\n          />\n        </Box>\n        <Box>\n          <Typography variant=\"h4\">TextField</Typography>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>standard input</Typography>\n            <div className={classes.Items}>\n              <Input error={hasError} />\n              <TextField label=\"label\" error={hasError} />\n              <TextField\n                label=\"label\"\n                error={hasError}\n                InputLabelProps={{ shrink: true }}\n              />\n            </div>\n          </Paper>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>outlined input</Typography>\n            <div className={classes.Items}>\n              <OutlinedInput error={hasError} />\n              <TextField label=\"label\" variant=\"outlined\" error={hasError} />\n              <TextField\n                label=\"label\"\n                variant=\"outlined\"\n                InputLabelProps={{ shrink: true }}\n                error={hasError}\n              />\n            </div>\n          </Paper>\n        </Box>\n\n        <Box>\n          <Typography variant=\"h4\">Select</Typography>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>select</Typography>\n            <div className={classes.Items}>\n              <FormControl error={hasError}>\n                <InputLabel shrink={true}>Age</InputLabel>\n                <Select displayEmpty>\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n                <FormHelperText>additional helper text</FormHelperText>\n              </FormControl>\n              <FormControl variant=\"outlined\" error={hasError}>\n                <Select displayEmpty>\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n                <FormHelperText>additional helper text</FormHelperText>\n              </FormControl>\n            </div>\n          </Paper>\n        </Box>\n\n        <Box>\n          <Typography variant=\"h4\">Checkbox</Typography>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>checkbox</Typography>\n            <div className={classes.Items}>\n              <FormGroup row={true}>\n                <Checkbox color=\"secondary\" checked={true} />\n                <Checkbox color=\"primary\" checked={true} />\n                <Checkbox color=\"secondary\" checked={true} disabled={true} />\n                <Checkbox color=\"secondary\" disabled={true} />\n              </FormGroup>\n            </div>\n          </Paper>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>checkbox with label</Typography>\n            <div className={classes.Items}>\n              <FormGroup row={true}>\n                <FormControlLabel\n                  control={<Checkbox checked={true} color=\"secondary\" />}\n                  label=\"color secondary\"\n                />\n                <FormControlLabel\n                  control={<Checkbox checked={true} color=\"primary\" />}\n                  label=\"color primary\"\n                />\n                <FormControlLabel\n                  control={<Checkbox disabled={true} checked={true} />}\n                  label=\"disabled checked\"\n                />\n                <FormControlLabel\n                  control={<Checkbox disabled={true} />}\n                  label=\"disabled\"\n                />\n              </FormGroup>\n              <FormGroup row={false}>\n                <FormControlLabel\n                  control={<Checkbox checked={true} color=\"secondary\" />}\n                  label=\"color secondary\"\n                />\n                <FormControlLabel\n                  control={<Checkbox checked={true} color=\"primary\" />}\n                  label=\"color primary\"\n                />\n                <FormControlLabel\n                  control={<Checkbox disabled={true} checked={true} />}\n                  label=\"disabled checked\"\n                />\n                <FormControlLabel\n                  control={<Checkbox disabled={true} />}\n                  label=\"disabled\"\n                />\n              </FormGroup>\n            </div>\n          </Paper>\n        </Box>\n\n        <Box>\n          <Typography variant=\"h4\">Radio</Typography>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>radio</Typography>\n            <div className={classes.Items}>\n              <FormControl>\n                <Radio checked={false} color=\"secondary\" />\n                <Radio checked={false} color=\"primary\" />\n                <Radio checked={false} disabled={true} />\n                <Radio disabled={true} checked={true} />\n              </FormControl>\n            </div>\n          </Paper>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>radio with label</Typography>\n            <div className={classes.Items}>\n              <FormControl>\n                <FormLabel>row true</FormLabel>\n                <RadioGroup row={true}>\n                  <FormControlLabel value=\"a\" control={<Radio />} label=\"a\" />\n                  <FormControlLabel value=\"b\" control={<Radio />} label=\"b\" />\n                  <FormControlLabel value=\"c\" control={<Radio />} label=\"c\" />\n                </RadioGroup>\n              </FormControl>\n              <FormControl>\n                <FormLabel>row false</FormLabel>\n                <RadioGroup row={false}>\n                  <FormControlLabel\n                    value=\"a\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"a\"\n                  />\n                  <FormControlLabel\n                    value=\"b\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"b\"\n                  />\n                  <FormControlLabel\n                    value=\"c\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"c\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </div>\n          </Paper>\n        </Box>\n\n        <Box>\n          <Typography variant=\"h4\">Button</Typography>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>contained button</Typography>\n            <div className={classes.Items}>\n              <Button variant=\"contained\" startIcon={<InfoIcon />}>\n                Default\n              </Button>\n              <Button variant=\"contained\" color=\"primary\">\n                Primary\n              </Button>\n              <Button variant=\"contained\" color=\"secondary\">\n                Secondary\n              </Button>\n              <Button variant=\"contained\" disabled>\n                Disabled\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                href=\"#contained-buttons\"\n              >\n                Link\n              </Button>\n            </div>\n          </Paper>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>text button</Typography>\n            <div className={classes.Items}>\n              <Button startIcon={<InfoIcon />}>Default</Button>\n              <Button color=\"primary\">Primary</Button>\n              <Button color=\"secondary\">Secondary</Button>\n              <Button disabled>Disabled</Button>\n              <Button href=\"#text-buttons\" color=\"primary\">\n                Link\n              </Button>\n            </div>\n          </Paper>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>outlined button</Typography>\n            <div className={classes.Items}>\n              <Button variant=\"outlined\" startIcon={<InfoIcon />}>\n                Default\n              </Button>\n              <Button variant=\"outlined\" color=\"primary\">\n                Primary\n              </Button>\n              <Button variant=\"outlined\" color=\"secondary\">\n                Secondary\n              </Button>\n              <Button variant=\"outlined\" disabled>\n                Disabled\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                href=\"#outlined-buttons\"\n              >\n                Link\n              </Button>\n            </div>\n          </Paper>\n        </Box>\n\n        <Box>\n          <Typography variant=\"h4\">Loading</Typography>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>circular</Typography>\n            <div className={classes.Items}>\n              <CircularProgress />\n              <CircularProgress color=\"secondary\" />\n            </div>\n          </Paper>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>linear</Typography>\n            <div className={classes.Items} style={{ width: 320 }}>\n              <LinearProgress />\n              <LinearProgress color=\"secondary\" />\n            </div>\n          </Paper>\n        </Box>\n\n        <Box>\n          <Typography variant=\"h4\">Notification</Typography>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>snackbar</Typography>\n            <div className={classes.Items}>\n              <Button variant=\"outlined\" onClick={handleSnackbarShow}>\n                Open snackbar\n              </Button>\n              <Snackbar\n                open={showSnackbar}\n                anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n                autoHideDuration={6000}\n                onClose={handleSnackbarHide}\n                message=\"Snack! hide after 6sec.\"\n                action={\n                  <IconButton\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={handleSnackbarHide}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                }\n              />\n            </div>\n          </Paper>\n        </Box>\n\n        <Box>\n          <Typography variant=\"h4\">Dialog</Typography>\n          <Paper classes={{ root: classes.LayoutPaper }}>\n            <Typography>dialog</Typography>\n            <div className={classes.Items}>\n              <Button variant=\"outlined\" onClick={handleDialogOpen}>\n                Open dialog\n              </Button>\n              <Dialog\n                classes={{ paper: classes.Dialog }}\n                disableEscapeKeyDown={true}\n                open={openDialog}\n                onClose={handleDialogClose}\n              >\n                <DialogTitle>Dialog title</DialogTitle>\n                <DialogContent>\n                  lLorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Nulla dictum blandit mi sed placerat. Aenean interdum sed quam\n                  eu vehicula. Vivamus dictum non est in rutrum. Aliquam non\n                  urna purus. Sed euismod, lacus sed aliquam sodales, dolor ex\n                  dapibus nunc, in sodales tortor libero et nibh. Quisque\n                  sollicitudin ultricies tellus, eget ultricies risus mattis eu.{\" \"}\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleDialogClose}>ok</Button>\n                </DialogActions>\n              </Dialog>\n            </div>\n          </Paper>\n        </Box>\n      </Container>\n    </MainTmpl>\n  );\n};\n\nexport default Showcase;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"components/pages/Home\";\nimport About from \"components/pages/About\";\nimport Todos from \"components/pages/Todos\";\nimport Forms from \"components/pages/Forms\";\nimport Showcase from \"components/pages/Showcase\";\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <Router basename=\"/react-app-playground\">\n      <Switch>\n        <Route strict={true} exact={true} path=\"/about\">\n          <About />\n        </Route>\n        <Route strict={true} exact={true} path=\"/todos\">\n          <Todos />\n        </Route>\n        <Route strict={true} exact={true} path=\"/forms\">\n          <Forms />\n        </Route>\n        <Route strict={true} exact={true} path=\"/showcase\">\n          <Showcase />\n        </Route>\n        <Route strict={true} exact={true} path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { Action, Reducer } from \"redux\";\n\nimport { TodosState } from \".\";\nimport { todosActionTypes, TodosAction, ADD_TODO, TOGGLE_TODO } from \"./types\";\n\nconst isActionType = (action: Action): action is TodosAction =>\n  todosActionTypes.some((actionType) => actionType === action.type);\n\nexport const createTodosReducer =\n  (initialState: TodosState): Reducer<TodosState, Action> =>\n  (state = initialState, action) => {\n    if (!isActionType(action)) return state;\n\n    switch (action.type) {\n      case ADD_TODO:\n        return {\n          ...state,\n          todos: [\n            ...state.todos,\n            {\n              title: \"\",\n              description: \"\",\n              id: action.payload.id,\n              completed: false,\n            },\n          ],\n        };\n      case TOGGLE_TODO: {\n        const index = state.todos.findIndex(\n          (todo) => todo.id === action.payload.id,\n        );\n        return index === -1\n          ? state\n          : {\n              ...state,\n              todos: [\n                ...state.todos.slice(0, index),\n                {\n                  ...state.todos[index],\n                  completed: !state.todos[index].completed,\n                },\n                ...state.todos.slice(index + 1),\n              ],\n            };\n      }\n    }\n  };\n","import { createTodosReducer } from \"./reducers\";\n\ninterface Todo {\n  title: string;\n  description: string;\n  id: string;\n  completed: boolean;\n}\n\nexport interface TodosState {\n  todos: Todo[];\n}\n\nexport default createTodosReducer;\n","import { Action, Reducer } from \"redux\";\n\nimport { PageStatusState } from \".\";\nimport {\n  pageStatusActionTypes,\n  PageStatusAction,\n  SET_PAGE_STATUS,\n} from \"./types\";\n\nconst isActionType = (action: Action): action is PageStatusAction =>\n  pageStatusActionTypes.some((actionType) => actionType === action.type);\n\nexport const createPageStatusReducer =\n  (initialState: PageStatusState): Reducer<PageStatusState, Action> =>\n  (state = initialState, action) => {\n    if (!isActionType(action)) return state;\n\n    switch (action.type) {\n      case SET_PAGE_STATUS:\n        return {\n          ...state,\n          status: action.payload.status,\n        };\n    }\n  };\n","import { createPageStatusReducer } from \"./reducers\";\n\nimport { PageStatus } from \"./types\";\n\nexport interface PageStatusState {\n  status: PageStatus;\n}\n\nexport default createPageStatusReducer;\n","import { createStore, applyMiddleware, Store, compose } from \"redux\";\nimport { LocationChangeAction } from \"connected-react-router\";\nimport { createBrowserHistory, History } from \"history\";\n\nimport { createReducer, GlobalState } from \"./ducks\";\n\nexport const history = createBrowserHistory();\n\nexport const configureStore = (\n  history: History,\n): { store: Store<GlobalState, LocationChangeAction> } => {\n  const store = createStore(createReducer(history), compose(applyMiddleware()));\n\n  return { store };\n};\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ThemeOptions } from \"@mui/material/styles/createTheme\";\n\nconst muiThemeOptions: ThemeOptions = {\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        sizeSmall: { fontSize: 12, fontWeight: 600 },\n        sizeLarge: { fontSize: 16, fontWeight: 600 },\n      },\n      defaultProps: {\n        size: \"small\",\n        disableRipple: true,\n        // label: { textTransform: \"none\" },\n      },\n    },\n    MuiButtonBase: {\n      defaultProps: {\n        disableRipple: true,\n      },\n    },\n    MuiFilledInput: {\n      defaultProps: {\n        margin: \"dense\",\n      },\n    },\n    MuiFormControl: {\n      defaultProps: {\n        margin: \"dense\",\n      },\n    },\n    MuiFormHelperText: {\n      defaultProps: {\n        margin: \"dense\",\n      },\n    },\n    MuiIconButton: {\n      defaultProps: {\n        size: \"small\",\n        disableRipple: true,\n      },\n    },\n    MuiInputBase: {\n      defaultProps: {\n        margin: \"dense\",\n      },\n    },\n    MuiInputLabel: {\n      defaultProps: {\n        margin: \"dense\",\n      },\n    },\n    MuiListItem: {\n      defaultProps: {\n        dense: true,\n      },\n    },\n    MuiOutlinedInput: {\n      defaultProps: {\n        margin: \"dense\",\n      },\n    },\n    MuiFab: {\n      defaultProps: {\n        size: \"small\",\n      },\n    },\n    MuiTable: {\n      defaultProps: {\n        size: \"small\",\n      },\n    },\n    MuiTextField: {\n      defaultProps: {\n        margin: \"dense\",\n      },\n    },\n    MuiToolbar: {\n      defaultProps: {\n        variant: \"dense\",\n      },\n    },\n  },\n  palette: {\n    primary: { main: \"hsl(120, 75%, 25%)\" },\n    secondary: { main: \"hsl(45, 75%, 25%)\" },\n    error: { main: \"hsl(360, 50%, 50%)\" },\n    warning: { main: \"hsl(30, 100%, 50%)\" },\n    info: { main: \"hsl(200, 100%, 50%)\" },\n    success: { main: \"hsl(135, 100%, 50%)\" },\n    text: {\n      primary: \"hsla(0, 0%, 0%, 0.87)\",\n      secondary: \"hsla(0, 0%, 0%, 0.54)\",\n      disabled: \"hsla(0, 0%, 0%, 0.38)\",\n    },\n  },\n  typography: {\n    fontFamily: [\"sans-serif\"].join(\",\"),\n  },\n};\n\nexport default muiThemeOptions;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { configureStore, history } from \"state/Store\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport muiThemeOptions from \"./MuiThemeOptions\";\n\nconst theme = createTheme(muiThemeOptions);\nconst { store } = configureStore(history);\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchOnWindowFocus: false,\n      staleTime: 300000,\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <QueryClientProvider client={queryClient}>\n          <ThemeProvider theme={theme}>\n            <App />\n          </ThemeProvider>\n        </QueryClientProvider>\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {\n  connectRouter,\n  LocationChangeAction,\n  RouterState,\n} from \"connected-react-router\";\nimport { combineReducers, Reducer } from \"redux\";\nimport { History } from \"history\";\n\nimport createTodosReducer, { TodosState } from \"./Todos\";\nimport createPageStatusReducer, { PageStatusState } from \"./PageStatus\";\n\nexport interface GlobalState {\n  router: RouterState;\n  todos: TodosState;\n  pageStatus: PageStatusState;\n}\n\nexport const createReducer = (\n  history: History,\n): Reducer<GlobalState, LocationChangeAction> =>\n  combineReducers({\n    router: connectRouter(history),\n    todos: createTodosReducer({ todos: [] }),\n    pageStatus: createPageStatusReducer({ status: \"idle\" }),\n  });\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BottomNavigation\":\"classes_BottomNavigation__1E7S1\",\"BottomNavigationAction\":\"classes_BottomNavigationAction___yw5k\"};"],"sourceRoot":""}